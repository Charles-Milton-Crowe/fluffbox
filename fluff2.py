

from cls_org import cls_chapter
from fluff2_menu import fluff_menu

from os import path
import os

""" 
    Mr Duck,
    Although not entirely completed the idea is that the modular nature
    of the cls_company will allow different configurations possible
    for a given chapter. For instance, the old 1-10 system or this new 
    3 fleet system, or a combination of these things. Allowing different
    options at chapter creation.
    
    The chapter contains a list of commands with each member of the list
    being an instance of cls_command. This class has a commander(A new
    rank between captains and chapter master) and controls a snakelike
    assembly of cls_companies that pass through marines in a bottom up
    fashion having been called to do so in a top down fashion.
    
    These 'request' methods in cls_company call other copies of itself in 
    seperate instances of the class. B.Foo calls B.Input.Foo(which is A.Foo) as A 
    is passed to B as an input at __init__.
    
    A given marine is generated by cls_marine_generator having been 
    requested by a scout(bottom) company of a fleet(command). The marine 
    is held in Scout, on through Reserves,Battleline, Assault companies.
    
        A special company cls_marine_generator provides an endcap to the 
    recursive nature of the method calls. It provides the
    initial marine and is the 'switch-hub' for transitions between ranks.
    If the scout companies request a rank. The cls_marine_generator provides
    the correct marine 1 rank down in the rank chain and requests him
    from the veteran company.
     
    The Dict-Key clever code changes are breaking my mind and might be the 
    cause of why the roll_fate() bug exists."""


def folders():

    if path.exists('records/') is False:
        os.mkdir('records')

    if path.exists('resources/') is False:
        print("Resources dont exit. FUBAR!")


#############################################
# Program Start #############################
#############################################

# Checks to make sure certain needed paths exist.
folders()

chapter = cls_chapter("Chapter Crusade Fleet")

#chapter.display_commands()
#input()
fluff_menu(chapter)

# Prints files upon end of program.
with open("records/Tournament_Champions.txt", 'w', encoding="utf-8") as f:
    for entry in chapter.tournament_champions:
        f.write(entry + "\n")

with open("records/Tournament_Recap.txt", 'w', encoding="utf-8") as f:
    for entry in chapter.tourney_recap:
        f.write(entry + "\n")
    f.write("\n")